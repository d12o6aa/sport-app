"""init schema

Revision ID: c29a7267880c
Revises: 
Create Date: 2025-08-13 04:29:31.448579

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c29a7267880c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('training_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('profile_image', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_users_email', ['email'], unique=False)
        batch_op.create_index('idx_users_role', ['role'], unique=False)
        batch_op.create_index('idx_users_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_status'), ['status'], unique=False)

    op.create_table('activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_logs_user_id'), ['user_id'], unique=False)

    op.create_table('admin_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), server_default='{"can_create_admins": true, "can_manage_users": true, "can_export_data": true}', nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('athlete_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('team', sa.String(length=100), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('pending_updates', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('coach_athlete',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['coach_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('coach_id', 'athlete_id', name='uq_coach_athlete_unique')
    )
    with op.batch_alter_table('coach_athlete', schema=None) as batch_op:
        batch_op.create_index('idx_coach_athlete_athlete_id', ['athlete_id'], unique=False)
        batch_op.create_index('idx_coach_athlete_coach_id', ['coach_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coach_athlete_athlete_id'), ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coach_athlete_coach_id'), ['coach_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coach_athlete_status'), ['status'], unique=False)

    op.create_table('coach_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sport_type', sa.String(length=100), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('certifications', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index('idx_messages_receiver_id', ['receiver_id'], unique=False)
        batch_op.create_index('idx_messages_sender_id', ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_receiver_id'), ['receiver_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sender_id'), ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sent_at'), ['sent_at'], unique=False)

    op.create_table('ml_insights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('insight_data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ml_insights', schema=None) as batch_op:
        batch_op.create_index('idx_ml_insights_athlete_id', ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ml_insights_athlete_id'), ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ml_insights_generated_at'), ['generated_at'], unique=False)

    op.create_table('plan_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.create_index('idx_subscription_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_subscriptions_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_subscriptions_user_id'), ['user_id'], unique=False)

    op.create_table('training_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['trainer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('training_groups', schema=None) as batch_op:
        batch_op.create_index('idx_training_groups_trainer_id', ['trainer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_training_groups_trainer_id'), ['trainer_id'], unique=False)

    op.create_table('training_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coach_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('training_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_training_plans_coach_id'), ['coach_id'], unique=False)

    op.create_table('workout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=20), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workout_files', schema=None) as batch_op:
        batch_op.create_index('idx_workout_files_athlete_id', ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workout_files_athlete_id'), ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workout_files_file_type'), ['file_type'], unique=False)

    op.create_table('workout_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('workout_details', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True),
    sa.Column('logged_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workout_logs', schema=None) as batch_op:
        batch_op.create_index('idx_workout_logs_athlete_id', ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workout_logs_athlete_id'), ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workout_logs_logged_at'), ['logged_at'], unique=False)

    op.create_table('athlete_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['training_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('athlete_id', 'group_id', name='uq_athlete_group_unique')
    )
    with op.batch_alter_table('athlete_group', schema=None) as batch_op:
        batch_op.create_index('idx_athlete_group_athlete_id', ['athlete_id'], unique=False)
        batch_op.create_index('idx_athlete_group_group_id', ['group_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_athlete_group_athlete_id'), ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_athlete_group_group_id'), ['group_id'], unique=False)

    op.create_table('athlete_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('athlete_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['athlete_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['training_plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('athlete_id', 'plan_id', name='uq_athlete_plan_unique')
    )
    with op.batch_alter_table('athlete_plan', schema=None) as batch_op:
        batch_op.create_index('idx_athlete_plan_athlete_id', ['athlete_id'], unique=False)
        batch_op.create_index('idx_athlete_plan_plan_id', ['plan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_athlete_plan_athlete_id'), ['athlete_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_athlete_plan_plan_id'), ['plan_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('athlete_plan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_athlete_plan_plan_id'))
        batch_op.drop_index(batch_op.f('ix_athlete_plan_athlete_id'))
        batch_op.drop_index('idx_athlete_plan_plan_id')
        batch_op.drop_index('idx_athlete_plan_athlete_id')

    op.drop_table('athlete_plan')
    with op.batch_alter_table('athlete_group', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_athlete_group_group_id'))
        batch_op.drop_index(batch_op.f('ix_athlete_group_athlete_id'))
        batch_op.drop_index('idx_athlete_group_group_id')
        batch_op.drop_index('idx_athlete_group_athlete_id')

    op.drop_table('athlete_group')
    with op.batch_alter_table('workout_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workout_logs_logged_at'))
        batch_op.drop_index(batch_op.f('ix_workout_logs_athlete_id'))
        batch_op.drop_index('idx_workout_logs_athlete_id')

    op.drop_table('workout_logs')
    with op.batch_alter_table('workout_files', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workout_files_file_type'))
        batch_op.drop_index(batch_op.f('ix_workout_files_athlete_id'))
        batch_op.drop_index('idx_workout_files_athlete_id')

    op.drop_table('workout_files')
    op.drop_table('workout')
    with op.batch_alter_table('training_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_training_plans_coach_id'))

    op.drop_table('training_plans')
    with op.batch_alter_table('training_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_training_groups_trainer_id'))
        batch_op.drop_index('idx_training_groups_trainer_id')

    op.drop_table('training_groups')
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscriptions_user_id'))
        batch_op.drop_index(batch_op.f('ix_subscriptions_status'))
        batch_op.drop_index('idx_subscription_user_id')

    op.drop_table('subscriptions')
    op.drop_table('plan_assignment')
    with op.batch_alter_table('ml_insights', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ml_insights_generated_at'))
        batch_op.drop_index(batch_op.f('ix_ml_insights_athlete_id'))
        batch_op.drop_index('idx_ml_insights_athlete_id')

    op.drop_table('ml_insights')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_sent_at'))
        batch_op.drop_index(batch_op.f('ix_messages_sender_id'))
        batch_op.drop_index(batch_op.f('ix_messages_receiver_id'))
        batch_op.drop_index(batch_op.f('ix_messages_is_read'))
        batch_op.drop_index('idx_messages_sender_id')
        batch_op.drop_index('idx_messages_receiver_id')

    op.drop_table('messages')
    op.drop_table('coach_profiles')
    with op.batch_alter_table('coach_athlete', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_coach_athlete_status'))
        batch_op.drop_index(batch_op.f('ix_coach_athlete_coach_id'))
        batch_op.drop_index(batch_op.f('ix_coach_athlete_athlete_id'))
        batch_op.drop_index('idx_coach_athlete_coach_id')
        batch_op.drop_index('idx_coach_athlete_athlete_id')

    op.drop_table('coach_athlete')
    op.drop_table('athlete_profiles')
    op.drop_table('admin_profiles')
    with op.batch_alter_table('activity_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_activity_logs_created_at'))

    op.drop_table('activity_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_status'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('idx_users_status')
        batch_op.drop_index('idx_users_role')
        batch_op.drop_index('idx_users_email')

    op.drop_table('users')
    op.drop_table('training_plan')
    # ### end Alembic commands ###
