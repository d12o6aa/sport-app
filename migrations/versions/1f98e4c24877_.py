"""empty message

Revision ID: 1f98e4c24877
Revises: 5da9e28e2770
Create Date: 2025-09-21 20:25:47.903462

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1f98e4c24877'
down_revision = '5da9e28e2770'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment_reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('technician_id', sa.Integer(), nullable=True),
    sa.Column('maintenance_type', sa.String(length=30), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('parts_replaced', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('scheduled_date', sa.Date(), nullable=True),
    sa.Column('completed_date', sa.Date(), nullable=True),
    sa.Column('next_maintenance_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipments.id'], ),
    sa.ForeignKeyConstraint(['technician_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('payment_status', sa.String(length=20), nullable=True),
    sa.Column('attendance_status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('equipments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('equipment_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('brand', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('model', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('serial_number', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('condition', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('purchase_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('last_maintenance', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('next_maintenance', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('maintenance_interval_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('maintenance_notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('usage_hours', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('max_users', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('current_users', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('location', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('specifications', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('image_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('manual_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_equipments_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_equipments_status'), ['status'], unique=False)
        batch_op.create_unique_constraint(None, ['serial_number'])

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_type', sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column('start_time', sa.Time(), nullable=True))
        batch_op.add_column(sa.Column('end_time', sa.Time(), nullable=True))
        batch_op.add_column(sa.Column('duration_hours', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('location', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('max_participants', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('current_participants', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('requires_registration', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('registration_deadline', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('registration_fee', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('organizer_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('contact_email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('contact_phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('image_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('attachment_urls', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('send_notifications', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('notification_sent', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('reminder_sent', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_events_date'), ['date'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['organizer_id'], ['id'])

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('priority', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('action_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('read_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('expires_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('delivery_status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('delivery_attempts', sa.Integer(), nullable=True))
        batch_op.create_index('idx_notifications_sent_at', ['sent_at'], unique=False)
        batch_op.create_index('idx_notifications_type_priority', ['type', 'priority'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_is_read'), ['is_read'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_is_read'))
        batch_op.drop_index('idx_notifications_type_priority')
        batch_op.drop_index('idx_notifications_sent_at')
        batch_op.drop_column('delivery_attempts')
        batch_op.drop_column('delivery_status')
        batch_op.drop_column('expires_at')
        batch_op.drop_column('read_at')
        batch_op.drop_column('extra_data')
        batch_op.drop_column('action_url')
        batch_op.drop_column('category')
        batch_op.drop_column('priority')
        batch_op.drop_column('title')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_events_date'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('tags')
        batch_op.drop_column('extra_data')
        batch_op.drop_column('reminder_sent')
        batch_op.drop_column('notification_sent')
        batch_op.drop_column('send_notifications')
        batch_op.drop_column('attachment_urls')
        batch_op.drop_column('image_url')
        batch_op.drop_column('contact_phone')
        batch_op.drop_column('contact_email')
        batch_op.drop_column('organizer_id')
        batch_op.drop_column('status')
        batch_op.drop_column('registration_fee')
        batch_op.drop_column('registration_deadline')
        batch_op.drop_column('requires_registration')
        batch_op.drop_column('current_participants')
        batch_op.drop_column('max_participants')
        batch_op.drop_column('location')
        batch_op.drop_column('duration_hours')
        batch_op.drop_column('end_time')
        batch_op.drop_column('start_time')
        batch_op.drop_column('event_type')

    with op.batch_alter_table('equipments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_equipments_status'))
        batch_op.drop_index(batch_op.f('ix_equipments_name'))
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('manual_url')
        batch_op.drop_column('image_url')
        batch_op.drop_column('specifications')
        batch_op.drop_column('location')
        batch_op.drop_column('current_users')
        batch_op.drop_column('max_users')
        batch_op.drop_column('usage_hours')
        batch_op.drop_column('maintenance_notes')
        batch_op.drop_column('maintenance_interval_days')
        batch_op.drop_column('next_maintenance')
        batch_op.drop_column('last_maintenance')
        batch_op.drop_column('purchase_date')
        batch_op.drop_column('condition')
        batch_op.drop_column('serial_number')
        batch_op.drop_column('model')
        batch_op.drop_column('brand')
        batch_op.drop_column('equipment_type')

    op.drop_table('event_registrations')
    op.drop_table('maintenance_logs')
    op.drop_table('equipment_reservations')
    # ### end Alembic commands ###
